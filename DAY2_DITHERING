PImage floyd;
PImage rwf;
PFont bp;
PGraphics c;

void setup() {
  size(800,800);
  
  bp = createFont("AUDIMRG_.TTF",25);
  rwf = loadImage("rwf.png");
  floyd = loadImage("Floyd.png");
  floyd.resize(600,646);
}

int index(int i, int j) {
  return i + j * floyd.width;
}

void draw() {
  background(0);
  
  /*
  push();
  imageMode(CENTER);
  translate(width/2,height/2);
  image(floyd,0,0);
  pop();
  */
  
  floyd.loadPixels();
  for (int j = 0; j < floyd.height-1; j++){
    for (int i = 1; i < floyd.width-1; i++){
      
      color pix = floyd.pixels[index(i,j)];
      
      float oldR = red(pix);
      float oldG = green(pix);
      float oldB = blue(pix);
      
      int factor = 1;
      
      int newR = round(factor * oldR / 255) * (255/factor);
      int newG = round(factor * oldG / 255) * (255/factor);
      int newB = round(factor * oldB / 255) * (255/factor);
      
      floyd.pixels[index(i,j)] = color(newR,newG,newB);
      
      float errR = oldR - newR;
      float errG = oldG - newG;
      float errB = oldB - newB;
      
      int index = index(i+1,j  );
      color c = floyd.pixels[index];
      float r = red(c);
      float g = green(c);
      float b = blue(c);   
      r = r + errR * 7/16.0;
      g = g + errG * 7/16.0;
      b = b + errB * 7/16.0;
      floyd.pixels[index] = color(r,g,b);
      
      index = index(i-1,j+1);
      c = floyd.pixels[index];
      r = red(c);
      g = green(c);
      b = blue(c);   
      r = r + errR * 3/16.0;
      g = g + errG * 3/16.0;
      b = b + errB * 3/16.0;
      floyd.pixels[index] = color(r,g,b);
      
      index = index(i  ,j+1);
      c = floyd.pixels[index];
      r = red(c);
      g = green(c);
      b = blue(c);   
      r = r + errR * 5/16.0;
      g = g + errG * 5/16.0;
      b = b + errB * 5/16.0;
      floyd.pixels[index] = color(r,g,b);
      
      index = index(i+1,j+1);
      c = floyd.pixels[index];
      r = red(c);
      g = green(c);
      b = blue(c);   
      r = r + errR * 1/16.0;
      g = g + errG * 1/16.0;
      b = b + errB * 1/16.0;
      floyd.pixels[index] = color(r,g,b);
      
      /*
      floyd.pixels[index(i+1,j  )] = 0;
      floyd.pixels[index(i-1,j+1)] = 0;
      floyd.pixels[index(i  ,j+1)] = 0;
      floyd.pixels[index(i+1,j+1)] = 0;
      */
      
    }
  }
  

  push();
    imageMode(CENTER);
    translate(width/2,height/2);
    image(floyd,0,0);
  pop();

  floyd.updatePixels();
  
  noStroke();
  float wave = sin(radians(frameCount*3));
  float tiles = map(wave,-1,1,50,200);
  float tileSize = width/tiles;
  
      
  for (int x = 0; x < tiles; x++) {
    for (int y = 0; y < tiles; y++) {
        
      color c = rwf.get(int(x*tileSize),int(y*tileSize));
      float size = map(brightness(c),0,255,0,tileSize);
        
       fill(255);
       ellipse(x*tileSize,y*tileSize,size,size);
    }
  }
  
  //Draws day # and prompt summary
  push();
    translate(15,785);
    textFont(bp);
    fill(255);
    text("DAY 2",0,0);
  pop();
  push();
    translate(785,785);
    textFont(bp);
    fill(255);
    textAlign(RIGHT);
    text("DITHERING",0,0);
  pop();

/*
  rec();
    
  if (frameCount == 1800) {
    exit(); 
  }
*/
}
